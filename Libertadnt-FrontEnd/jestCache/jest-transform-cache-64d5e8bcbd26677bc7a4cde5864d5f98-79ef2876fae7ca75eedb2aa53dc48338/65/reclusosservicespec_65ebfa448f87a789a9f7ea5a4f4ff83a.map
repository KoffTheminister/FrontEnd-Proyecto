{"file":"/home/tenet7750/tpdesarrollofe/Libertadnt-FrontEnd/src/app/reclusos/reclusos.service.spec.ts","mappings":";;AAAA,0DAA6F;AAC7F,mDAA+C;AAC/C,+DAAuD;AAGvD,QAAQ,CAAC,sBAAsB,EAAE,GAAG,EAAE;IAClC,IAAI,SAA0B,CAAA;IAC9B,IAAI,UAAiC,CAAA;IACrC,IAAI,aAAa,GAAG;QAClB;YACE,aAAa,EAAE,CAAC;YAChB,QAAQ,EAAE,MAAM;YAChB,UAAU,EAAE,QAAQ;YACpB,KAAK,EAAE,OAAO;YACd,WAAW,EAAE,YAAY;SAC1B;QACD;YACE,aAAa,EAAE,CAAC;YAChB,QAAQ,EAAE,SAAS;YACnB,UAAU,EAAE,OAAO;YACnB,KAAK,EAAE,OAAO;YACd,WAAW,EAAE,YAAY;SAC1B;QACD;YACE,aAAa,EAAE,CAAC;YAChB,QAAQ,EAAE,QAAQ;YAClB,UAAU,EAAE,YAAY;YACxB,KAAK,EAAE,OAAO;YACd,WAAW,EAAE,YAAY;SAC1B;KACF,CAAA;IAED,UAAU,CAAC,KAAK,IAAI,EAAE;QACpB,iBAAO,CAAC,sBAAsB,CAAC;YAC3B,OAAO,EAAE;gBACL,iCAAuB;aAC1B;YACD,SAAS,EAAE;gBACT,qCAAe;aAChB;SACJ,CAAC,CAAA;QAEF,SAAS,GAAG,iBAAO,CAAC,MAAM,CAAC,qCAAe,CAAC,CAAA;QAC3C,UAAU,GAAG,iBAAO,CAAC,MAAM,CAAC,+BAAqB,CAAC,CAAA;IACpD,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,2BAA2B,EAAE,GAAG,EAAE;QACnC,MAAM,CAAC,SAAS,CAAC,CAAC,UAAU,EAAE,CAAA;IAChC,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,kCAAkC,EAAE,GAAG,EAAE;QAC1C,IAAI,WAAW,GAAG,CAAC,CAAA;QACnB,SAAS,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YACxD,IAAI,OAAO,GAAG,aAAa,CAAC,CAAC,CAAC,CAAA;YAC9B,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAA;YACtC,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAA;QAC5C,CAAC,CAAC,CAAA;QAEF,MAAM,OAAO,GAAG,UAAU,CAAC,SAAS,CAAC,iCAAiC,GAAC,GAAG,WAAW,EAAE,CAAC,CAAA;QACxF,OAAO,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAA;IACjC,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,kCAAkC,EAAE,GAAG,EAAE;QAC1C,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YAC3C,MAAM,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,CAAA;QACjD,CAAC,CAAC,CAAA;QAEF,MAAM,OAAO,GAAG,UAAU,CAAC,SAAS,CAAC,iCAAiC,CAAC,CAAA;QACvE,OAAO,CAAC,KAAK,CAAC,aAAa,CAAC,CAAA;IAC9B,CAAC,CAAC,CAAA;AACN,CAAC,CAAC,CAAA","names":[],"sources":["/home/tenet7750/tpdesarrollofe/Libertadnt-FrontEnd/src/app/reclusos/reclusos.service.spec.ts"],"sourcesContent":["import { HttpClientTestingModule, HttpTestingController } from '@angular/common/http/testing'\nimport { TestBed } from \"@angular/core/testing\"\nimport { ReclusosService } from './reclusos.service.js'\nimport { servicesVersion } from 'typescript';\n\ndescribe('ReclusoService tests', () => {\n    let r_service: ReclusosService\n    let controller: HttpTestingController\n    let unos_reclusos = [\n      {\n        \"cod_recluso\": 1,\n        \"nombre\": \"Juan\",\n        \"apellido\": \"Macron\",\n        \"dni\": 2020202,\n        \"fecha_nac\": \"2004-01-01\"\n      },\n      {\n        \"cod_recluso\": 2,\n        \"nombre\": \"Estevan\",\n        \"apellido\": \"Quito\",\n        \"dni\": 2020203,\n        \"fecha_nac\": \"2004-01-01\"\n      },\n      {\n        \"cod_recluso\": 3,\n        \"nombre\": \"Carlos\",\n        \"apellido\": \"Fredicksen\",\n        \"dni\": 2020204,\n        \"fecha_nac\": \"2004-01-01\"\n      }\n    ]\n\n    beforeEach(async () => {\n      TestBed.configureTestingModule({\n          imports: [\n              HttpClientTestingModule\n          ],\n          providers: [\n            ReclusosService,\n          ]\n      })\n\n      r_service = TestBed.inject(ReclusosService)\n      controller = TestBed.inject(HttpTestingController)\n    })\n\n    it('deberia crear un servicio', () => {\n      expect(r_service).toBeTruthy()\n    })\n\n    it('deberia devolver un solo recluso', () => {\n      let cod_recluso = 2\n      r_service.getOneRecluso(cod_recluso).subscribe(response => {\n        let recluso = unos_reclusos[0]\n        expect(recluso.nombre).toEqual('Juan')\n        expect(recluso.apellido).toEqual('Macron')\n      })\n\n      const request = controller.expectOne(\"http://localhost:8080/reclusos/\"+`${cod_recluso}`)\n      request.flush(unos_reclusos[0])\n    })\n\n    it('deberia devolver un solo recluso', () => {\n      r_service.getReclusos().subscribe(response => {\n        expect(unos_reclusos.length).toBeGreaterThan(0)\n      })\n\n      const request = controller.expectOne(\"http://localhost:8080/reclusos/\")\n      request.flush(unos_reclusos)\n    })\n})\n\n"],"version":3}