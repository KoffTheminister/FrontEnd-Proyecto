bb9d39ba765f5ddddddb8096bf9fb307
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const testing_1 = require("@angular/core/testing");
const testing_2 = require("@angular/common/http/testing");
const log_in_component_1 = require("./log-in.component");
const usuario_service_1 = require("./usuario.service");
const router_1 = require("@angular/router");
const rxjs_1 = require("rxjs");
const platform_browser_1 = require("@angular/platform-browser");
const un_usuario = {
    "cod_administrador": 1,
    "contrasenia": "123r"
};
const UsuarioServiceMock = {
    postAdministrador: jest.fn(() => {
        return (0, rxjs_1.of)({});
    })
};
describe('LogInComponent', () => {
    let component;
    let fixture;
    beforeEach(async () => {
        await testing_1.TestBed.configureTestingModule({
            // declarations: [
            //   LogInComponent,
            // ],      
            imports: [log_in_component_1.LogInComponent, testing_2.HttpClientTestingModule], //NO borrar esta parte
            providers: [{ provide: usuario_service_1.UsuarioService, useValue: UsuarioServiceMock }, { provide: router_1.ActivatedRoute, useValue: { paramMap: (0, rxjs_1.of)({}) } }]
        })
            .compileComponents();
        fixture = testing_1.TestBed.createComponent(log_in_component_1.LogInComponent);
        component = fixture.componentInstance;
        fixture.detectChanges();
        let service = testing_1.TestBed.inject(usuario_service_1.UsuarioService);
        fixture.detectChanges();
        //UsuarioServiceMock.postAdministrador.mockReturnValue(of({}));
    });
    it('should create', () => {
        const fixture = testing_1.TestBed.createComponent(log_in_component_1.LogInComponent);
        const app = fixture.componentInstance;
        expect(app).toBeTruthy();
    });
    it('llamada a postAdministrador', () => {
        const fixture = testing_1.TestBed.createComponent(log_in_component_1.LogInComponent);
        const app = fixture.componentInstance;
        UsuarioServiceMock.postAdministrador.mockReturnValue((0, rxjs_1.of)({}));
        app.enviarUsuario();
        expect(UsuarioServiceMock.postAdministrador).toHaveBeenCalled();
    });
    it('se geneera el h1 css', () => {
        const fixture = testing_1.TestBed.createComponent(log_in_component_1.LogInComponent);
        const app = fixture.componentInstance;
        fixture.detectChanges();
        const h1 = fixture.debugElement.queryAll(platform_browser_1.By.css('h1'));
    });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL2hvbWUvdGVuZXQ3NzUwL3RwZGVzYXJyb2xsb2ZlL0xpYmVydGFkbnQtRnJvbnRFbmQvc3JjL2FwcC9sb2ctaW4vbG9nLWluLmNvbXBvbmVudC5zcGVjLnRzIiwibWFwcGluZ3MiOiI7O0FBQUEsbURBQWtFO0FBQ2xFLDBEQUE2RjtBQUM3Rix5REFBbUQ7QUFDbkQsdURBQWtEO0FBQ2xELDRDQUFpRDtBQUNqRCwrQkFBeUI7QUFDekIsZ0VBQStDO0FBRS9DLE1BQU0sVUFBVSxHQUFHO0lBQ2pCLG1CQUFtQixFQUFFLENBQUM7SUFDdEIsYUFBYSxFQUFFLE1BQU07Q0FDdEIsQ0FBQTtBQUVELE1BQU0sa0JBQWtCLEdBQUc7SUFDekIsaUJBQWlCLEVBQUUsSUFBSSxDQUFDLEVBQUUsQ0FBQyxHQUFHLEVBQUU7UUFDOUIsT0FBTyxJQUFBLFNBQUUsRUFBQyxFQUFFLENBQUMsQ0FBQTtJQUNmLENBQUMsQ0FBQztDQUNILENBQUE7QUFFRCxRQUFRLENBQUMsZ0JBQWdCLEVBQUUsR0FBRyxFQUFFO0lBQzlCLElBQUksU0FBeUIsQ0FBQztJQUM5QixJQUFJLE9BQXlDLENBQUM7SUFFOUMsVUFBVSxDQUFDLEtBQUssSUFBSSxFQUFFO1FBQ3BCLE1BQU0saUJBQU8sQ0FBQyxzQkFBc0IsQ0FBQztZQUNuQyxrQkFBa0I7WUFDbEIsb0JBQW9CO1lBQ3BCLFdBQVc7WUFDWCxPQUFPLEVBQUUsQ0FBQyxpQ0FBYyxFQUFFLGlDQUF1QixDQUFDLEVBQUUsc0JBQXNCO1lBQzFFLFNBQVMsRUFBRSxDQUFDLEVBQUMsT0FBTyxFQUFFLGdDQUFjLEVBQUUsUUFBUSxFQUFFLGtCQUFrQixFQUFDLEVBQUUsRUFBQyxPQUFPLEVBQUUsdUJBQWMsRUFBRSxRQUFRLEVBQUUsRUFBQyxRQUFRLEVBQUUsSUFBQSxTQUFFLEVBQUMsRUFBRSxDQUFDLEVBQUMsRUFBQyxDQUFDO1NBQzlILENBQUM7YUFDRCxpQkFBaUIsRUFBRSxDQUFBO1FBRXBCLE9BQU8sR0FBRyxpQkFBTyxDQUFDLGVBQWUsQ0FBQyxpQ0FBYyxDQUFDLENBQUE7UUFDakQsU0FBUyxHQUFHLE9BQU8sQ0FBQyxpQkFBaUIsQ0FBQTtRQUNyQyxPQUFPLENBQUMsYUFBYSxFQUFFLENBQUE7UUFDdkIsSUFBSSxPQUFPLEdBQUcsaUJBQU8sQ0FBQyxNQUFNLENBQUMsZ0NBQWMsQ0FBQyxDQUFBO1FBQzVDLE9BQU8sQ0FBQyxhQUFhLEVBQUUsQ0FBQTtRQUN2QiwrREFBK0Q7SUFDakUsQ0FBQyxDQUFDLENBQUM7SUFFSCxFQUFFLENBQUMsZUFBZSxFQUFFLEdBQUcsRUFBRTtRQUN2QixNQUFNLE9BQU8sR0FBRyxpQkFBTyxDQUFDLGVBQWUsQ0FBQyxpQ0FBYyxDQUFDLENBQUE7UUFDdkQsTUFBTSxHQUFHLEdBQUcsT0FBTyxDQUFDLGlCQUFpQixDQUFBO1FBQ3JDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQyxVQUFVLEVBQUUsQ0FBQTtJQUMxQixDQUFDLENBQUMsQ0FBQTtJQUVGLEVBQUUsQ0FBQyw2QkFBNkIsRUFBRSxHQUFHLEVBQUU7UUFDckMsTUFBTSxPQUFPLEdBQUcsaUJBQU8sQ0FBQyxlQUFlLENBQUMsaUNBQWMsQ0FBQyxDQUFBO1FBQ3ZELE1BQU0sR0FBRyxHQUFHLE9BQU8sQ0FBQyxpQkFBaUIsQ0FBQTtRQUNyQyxrQkFBa0IsQ0FBQyxpQkFBaUIsQ0FBQyxlQUFlLENBQUMsSUFBQSxTQUFFLEVBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztRQUM3RCxHQUFHLENBQUMsYUFBYSxFQUFFLENBQUE7UUFDbkIsTUFBTSxDQUFDLGtCQUFrQixDQUFDLGlCQUFpQixDQUFDLENBQUMsZ0JBQWdCLEVBQUUsQ0FBQTtJQUVqRSxDQUFDLENBQUMsQ0FBQTtJQUNGLEVBQUUsQ0FBQyxzQkFBc0IsRUFBRSxHQUFHLEVBQUU7UUFDOUIsTUFBTSxPQUFPLEdBQUcsaUJBQU8sQ0FBQyxlQUFlLENBQUMsaUNBQWMsQ0FBQyxDQUFBO1FBQ3ZELE1BQU0sR0FBRyxHQUFHLE9BQU8sQ0FBQyxpQkFBaUIsQ0FBQTtRQUNyQyxPQUFPLENBQUMsYUFBYSxFQUFFLENBQUM7UUFDeEIsTUFBTSxFQUFFLEdBQUcsT0FBTyxDQUFDLFlBQVksQ0FBQyxRQUFRLENBQUMscUJBQUUsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQTtJQUV4RCxDQUFDLENBQUMsQ0FBQTtBQUVKLENBQUMsQ0FBQyxDQUFBIiwibmFtZXMiOltdLCJzb3VyY2VzIjpbIi9ob21lL3RlbmV0Nzc1MC90cGRlc2Fycm9sbG9mZS9MaWJlcnRhZG50LUZyb250RW5kL3NyYy9hcHAvbG9nLWluL2xvZy1pbi5jb21wb25lbnQuc3BlYy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnRGaXh0dXJlLCBUZXN0QmVkIH0gZnJvbSAnQGFuZ3VsYXIvY29yZS90ZXN0aW5nJztcbmltcG9ydCB7IEh0dHBDbGllbnRUZXN0aW5nTW9kdWxlLCBIdHRwVGVzdGluZ0NvbnRyb2xsZXIgfSBmcm9tICdAYW5ndWxhci9jb21tb24vaHR0cC90ZXN0aW5nJ1xuaW1wb3J0IHsgTG9nSW5Db21wb25lbnQgfSBmcm9tICcuL2xvZy1pbi5jb21wb25lbnQnXG5pbXBvcnQgeyBVc3VhcmlvU2VydmljZSB9IGZyb20gJy4vdXN1YXJpby5zZXJ2aWNlJ1xuaW1wb3J0IHsgQWN0aXZhdGVkUm91dGUgfSBmcm9tICdAYW5ndWxhci9yb3V0ZXInO1xuaW1wb3J0IHsgb2YgfSBmcm9tICdyeGpzJ1xuaW1wb3J0IHsgQnkgfSBmcm9tICdAYW5ndWxhci9wbGF0Zm9ybS1icm93c2VyJztcblxuY29uc3QgdW5fdXN1YXJpbyA9IHtcbiAgXCJjb2RfYWRtaW5pc3RyYWRvclwiOiAxLFxuICBcImNvbnRyYXNlbmlhXCI6IFwiMTIzclwiXG59XG5cbmNvbnN0IFVzdWFyaW9TZXJ2aWNlTW9jayA9IHtcbiAgcG9zdEFkbWluaXN0cmFkb3I6IGplc3QuZm4oKCkgPT4ge1xuICAgIHJldHVybiBvZih7fSlcbiAgfSlcbn1cblxuZGVzY3JpYmUoJ0xvZ0luQ29tcG9uZW50JywgKCkgPT4ge1xuICBsZXQgY29tcG9uZW50OiBMb2dJbkNvbXBvbmVudDtcbiAgbGV0IGZpeHR1cmU6IENvbXBvbmVudEZpeHR1cmU8TG9nSW5Db21wb25lbnQ+O1xuXG4gIGJlZm9yZUVhY2goYXN5bmMgKCkgPT4ge1xuICAgIGF3YWl0IFRlc3RCZWQuY29uZmlndXJlVGVzdGluZ01vZHVsZSh7XG4gICAgICAvLyBkZWNsYXJhdGlvbnM6IFtcbiAgICAgIC8vICAgTG9nSW5Db21wb25lbnQsXG4gICAgICAvLyBdLCAgICAgIFxuICAgICAgaW1wb3J0czogW0xvZ0luQ29tcG9uZW50LCBIdHRwQ2xpZW50VGVzdGluZ01vZHVsZV0sIC8vTk8gYm9ycmFyIGVzdGEgcGFydGVcbiAgICAgIHByb3ZpZGVyczogW3twcm92aWRlOiBVc3VhcmlvU2VydmljZSwgdXNlVmFsdWU6IFVzdWFyaW9TZXJ2aWNlTW9ja30sIHtwcm92aWRlOiBBY3RpdmF0ZWRSb3V0ZSwgdXNlVmFsdWU6IHtwYXJhbU1hcDogb2Yoe30pfX1dXG4gICAgfSlcbiAgICAuY29tcGlsZUNvbXBvbmVudHMoKVxuXG4gICAgZml4dHVyZSA9IFRlc3RCZWQuY3JlYXRlQ29tcG9uZW50KExvZ0luQ29tcG9uZW50KVxuICAgIGNvbXBvbmVudCA9IGZpeHR1cmUuY29tcG9uZW50SW5zdGFuY2VcbiAgICBmaXh0dXJlLmRldGVjdENoYW5nZXMoKVxuICAgIGxldCBzZXJ2aWNlID0gVGVzdEJlZC5pbmplY3QoVXN1YXJpb1NlcnZpY2UpXG4gICAgZml4dHVyZS5kZXRlY3RDaGFuZ2VzKClcbiAgICAvL1VzdWFyaW9TZXJ2aWNlTW9jay5wb3N0QWRtaW5pc3RyYWRvci5tb2NrUmV0dXJuVmFsdWUob2Yoe30pKTtcbiAgfSk7XG5cbiAgaXQoJ3Nob3VsZCBjcmVhdGUnLCAoKSA9PiB7XG4gICAgY29uc3QgZml4dHVyZSA9IFRlc3RCZWQuY3JlYXRlQ29tcG9uZW50KExvZ0luQ29tcG9uZW50KVxuICAgIGNvbnN0IGFwcCA9IGZpeHR1cmUuY29tcG9uZW50SW5zdGFuY2VcbiAgICBleHBlY3QoYXBwKS50b0JlVHJ1dGh5KClcbiAgfSlcblxuICBpdCgnbGxhbWFkYSBhIHBvc3RBZG1pbmlzdHJhZG9yJywgKCkgPT4ge1xuICAgIGNvbnN0IGZpeHR1cmUgPSBUZXN0QmVkLmNyZWF0ZUNvbXBvbmVudChMb2dJbkNvbXBvbmVudClcbiAgICBjb25zdCBhcHAgPSBmaXh0dXJlLmNvbXBvbmVudEluc3RhbmNlXG4gICAgVXN1YXJpb1NlcnZpY2VNb2NrLnBvc3RBZG1pbmlzdHJhZG9yLm1vY2tSZXR1cm5WYWx1ZShvZih7fSkpO1xuICAgIGFwcC5lbnZpYXJVc3VhcmlvKClcbiAgICBleHBlY3QoVXN1YXJpb1NlcnZpY2VNb2NrLnBvc3RBZG1pbmlzdHJhZG9yKS50b0hhdmVCZWVuQ2FsbGVkKClcblxuICB9KVxuICBpdCgnc2UgZ2VuZWVyYSBlbCBoMSBjc3MnLCAoKSA9PiB7XG4gICAgY29uc3QgZml4dHVyZSA9IFRlc3RCZWQuY3JlYXRlQ29tcG9uZW50KExvZ0luQ29tcG9uZW50KVxuICAgIGNvbnN0IGFwcCA9IGZpeHR1cmUuY29tcG9uZW50SW5zdGFuY2VcbiAgICBmaXh0dXJlLmRldGVjdENoYW5nZXMoKTtcbiAgICBjb25zdCBoMSA9IGZpeHR1cmUuZGVidWdFbGVtZW50LnF1ZXJ5QWxsKEJ5LmNzcygnaDEnKSlcblxuICB9KVxuXG59KVxuXG5cblxuXG4iXSwidmVyc2lvbiI6M30=